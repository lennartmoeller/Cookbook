name: Format Recipes

on:
  push:
    branches:
      - main
    paths:
      - recipes.json
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check For Unformatted Recipes
        run: |
          UNFORMATTED_RECIPES=$(jq -c '.[] | select(.formatted == false)' recipes.json)
          while IFS= read -r recipe; do
            RECIPE_CATEGORY=$(echo "$recipe" | jq -r '.category')
            RECIPE_NAME=$(echo "$recipe" | jq -r '.name')
            RECIPE_PATH="recipes/${RECIPE_CATEGORY}/${RECIPE_NAME}.md"
            python3 scripts/format_recipe.py "$RECIPE_PATH"
          done <<< "$UNFORMATTED_RECIPES"
          jq '(.[] | select(.formatted == false) | .formatted) = true' recipes.json > tmp.json && mv tmp.json recipes.json

      - name: Commit and push changes
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${PERSONAL_ACCESS_TOKEN}@github.com/${{ github.repository }}.git
          git fetch origin main
          git add recipes/**/*
          git add recipes.json
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "Add formatted recipe versions"
            git push origin main
          fi
